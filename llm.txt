# Supervisor Project Description

## Overview
This project is a supervisor service that manages a long-running process. It provides an HTTP proxy that forwards requests to an upstream server, but only if the supervised process is running. If the process is not running, the proxy returns a 503 Service Unavailable response.

## Goals
- Manage a long-running process, ensuring it stays alive and restarts if it crashes.
- Provide an HTTP proxy that forwards requests to an upstream server, but only if the supervised process is running.
- Allow configuration of the supervised process via an HTTP API.
- Provide a status endpoint to check if the process is running and configured.

## What We've Accomplished
- Created a supervisor that manages a long-running process, ensuring it stays alive and restarts if it crashes.
- Implemented an HTTP proxy that forwards requests to an upstream server, but only if the supervised process is running.
- Added an admin API to configure the supervised process and check its status.
- Wrote tests to verify the supervisor and proxy functionality.

## What We're Not Doing
- We're not using process groups to manage the supervised process. Instead, we're letting the process be a direct child of the supervisor.
- We're not implementing any authentication or authorization for the admin API. The token is hardcoded in the environment.
- We're not implementing any logging or monitoring of the supervised process.
- We're not implementing any configuration persistence. The configuration is lost if the supervisor is restarted.

## Next Steps
- Implement authentication and authorization for the admin API.
- Add logging and monitoring of the supervised process.
- Implement configuration persistence.
- Add more tests to verify the supervisor and proxy functionality. 